#pragma checksum "/Volumes/Suresh/VS Code/CoreSRT/CoreSRT/Views/Bills/Create.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "81414d4ebd3c1b037bc008de523180986efec003"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Bills_Create), @"mvc.1.0.view", @"/Views/Bills/Create.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Bills/Create.cshtml", typeof(AspNetCore.Views_Bills_Create))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "/Volumes/Suresh/VS Code/CoreSRT/CoreSRT/Views/_ViewImports.cshtml"
using CoreSRT;

#line default
#line hidden
#line 2 "/Volumes/Suresh/VS Code/CoreSRT/CoreSRT/Views/_ViewImports.cshtml"
using CoreSRT.Models;

#line default
#line hidden
#line 7 "/Volumes/Suresh/VS Code/CoreSRT/CoreSRT/Views/Bills/Create.cshtml"
using CoreSRT.Models.ViewModels;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"81414d4ebd3c1b037bc008de523180986efec003", @"/Views/Bills/Create.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"46d3c613dcf7826469de347edd45536d095786a0", @"/Views/_ViewImports.cshtml")]
    public class Views_Bills_Create : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<BillViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(121, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(130, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(166, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(190, 173, true);
            WriteLiteral("\r\n<div>\r\n    <p align=\"center\"> <b>Generate Bill</b> </p>\r\n</div>\r\n\r\n\r\n\r\n    <table class=\"table\">\r\n        <tr>\r\n            <td> Select Customer : </td>\r\n            <td> ");
            EndContext();
            BeginContext(364, 113, false);
#line 20 "/Volumes/Suresh/VS Code/CoreSRT/CoreSRT/Views/Bills/Create.cshtml"
            Write(Html.DropDownListFor(m => m.CustomerId, new SelectList(Model.Customers, "CustomerId", "Name"), "Select Customer"));

#line default
#line hidden
            EndContext();
            BeginContext(477, 18, true);
            WriteLiteral("\r\n                ");
            EndContext();
            BeginContext(496, 104, false);
#line 21 "/Volumes/Suresh/VS Code/CoreSRT/CoreSRT/Views/Bills/Create.cshtml"
           Write(Html.ValidationMessageFor(m=>m.CustomerId, "Please select a customer!", new {@class ="text-danger"}, ""));

#line default
#line hidden
            EndContext();
            BeginContext(600, 287, true);
            WriteLiteral(@"
        </tr>
    </table>

    <table name=""BillingItems"" class=""table"" id=""billingItemsTable"">
        <thead>
            <tr>

                <th class=""col-md-2"">
                    Item
                </th>
                <th class=""col-md-2"">
                    ");
            EndContext();
            BeginContext(888, 61, false);
#line 33 "/Volumes/Suresh/VS Code/CoreSRT/CoreSRT/Views/Bills/Create.cshtml"
               Write(Html.DisplayNameFor(model => model.BillingItems.First().CGST));

#line default
#line hidden
            EndContext();
            BeginContext(949, 67, true);
            WriteLiteral("\r\n                </th>\r\n                <th>\r\n                    ");
            EndContext();
            BeginContext(1017, 61, false);
#line 36 "/Volumes/Suresh/VS Code/CoreSRT/CoreSRT/Views/Bills/Create.cshtml"
               Write(Html.DisplayNameFor(model => model.BillingItems.First().SGST));

#line default
#line hidden
            EndContext();
            BeginContext(1078, 67, true);
            WriteLiteral("\r\n                </th>\r\n                <th>\r\n                    ");
            EndContext();
            BeginContext(1146, 70, false);
#line 39 "/Volumes/Suresh/VS Code/CoreSRT/CoreSRT/Views/Bills/Create.cshtml"
               Write(Html.DisplayNameFor(model => model.BillingItems.First().OriginalPrice));

#line default
#line hidden
            EndContext();
            BeginContext(1216, 67, true);
            WriteLiteral("\r\n                </th>\r\n                <th>\r\n                    ");
            EndContext();
            BeginContext(1284, 69, false);
#line 42 "/Volumes/Suresh/VS Code/CoreSRT/CoreSRT/Views/Bills/Create.cshtml"
               Write(Html.DisplayNameFor(model => model.BillingItems.First().SellingPrice));

#line default
#line hidden
            EndContext();
            BeginContext(1353, 67, true);
            WriteLiteral("\r\n                </th>\r\n                <th>\r\n                    ");
            EndContext();
            BeginContext(1421, 65, false);
#line 45 "/Volumes/Suresh/VS Code/CoreSRT/CoreSRT/Views/Bills/Create.cshtml"
               Write(Html.DisplayNameFor(model => model.BillingItems.First().Quantity));

#line default
#line hidden
            EndContext();
            BeginContext(1486, 67, true);
            WriteLiteral("\r\n                </th>\r\n                <th>\r\n                    ");
            EndContext();
            BeginContext(1554, 67, false);
#line 48 "/Volumes/Suresh/VS Code/CoreSRT/CoreSRT/Views/Bills/Create.cshtml"
               Write(Html.DisplayNameFor(model => model.BillingItems.First().TotalPrice));

#line default
#line hidden
            EndContext();
            BeginContext(1621, 103, true);
            WriteLiteral("\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody class=\"itemCollections\">\r\n");
            EndContext();
#line 53 "/Volumes/Suresh/VS Code/CoreSRT/CoreSRT/Views/Bills/Create.cshtml"
             for (int i = 0; i < Model.BillingItems.Count; i++)
            {

                

#line default
#line hidden
            BeginContext(1823, 59, false);
#line 56 "/Volumes/Suresh/VS Code/CoreSRT/CoreSRT/Views/Bills/Create.cshtml"
           Write(Html.Partial("BillingItemViewModel", Model.BillingItems[i]));

#line default
#line hidden
            EndContext();
#line 56 "/Volumes/Suresh/VS Code/CoreSRT/CoreSRT/Views/Bills/Create.cshtml"
                                                                            ;
            }

#line default
#line hidden
            BeginContext(1900, 3412, true);
            WriteLiteral(@"
        </tbody>
        <tfoot>
            <tr>
                <td>
                    <button id=""btnAdd"" class=""btnAdd btn btn-info btn-sm"" type=""button"" value=""Add"">
                        <span class=""glyphicon glyphicon-plus""></span>
                    </button>
                </td>

                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
        </tfoot>
    </table>
    <p class=""text-center"">
    <button id=""btnSubmit"" class=""btn btn-primary btn-sm"" onclick=""TestFunction()"">
        <span class=""glyphicon glyphicon-ok""></span> Generate Bill
    </button>
        </p>



    <script type=""text/javascript"">
    $(document).on(""click"", "".btnAdd"", function(){
    var index = $(""table#billingItemsTable tbody tr"").length + 1;

       $.ajax({
            url: 'AddItem',
    data:{index:index},
            success: function (data) {
                $");
            WriteLiteral(@"('#billingItemsTable > tbody').append(data);
            },
            error: function (a, b, c) {
                console.log(a, b, c);
            }

        });
    });
 function TestFunction(){
        var table = $('table#billingItemsTable');

        var o = [];
        table.find('tr').each(function() {
        var $this = $(this);
        var $elements = $this.find('input, textarea, select')
        if ($elements.size() > 0) {
            var serialized = $elements.serialize();
            var item = $.toDictionary( serialized );
            o.push(item);
        }
        });

        //o.splice(-1,1);

        var modelJson = new Object();
        modelJson.CustomerId = parseInt($('[id*=""CustomerId""]').val());
        modelJson.Items = o;

        var dataJson = JSON.stringify(modelJson);
        var tempp = JSON.stringify({""modelJson"": dataJson});

        $.ajax({
             url:'Create',
             type:'POST',
             dataType: ""json"",
             co");
            WriteLiteral(@"ntentType: 'application/json; charset=utf-8',
             data:  dataJson,
             success: function(data1){
                     var url = data1['RedirectURL'];
                     var print = confirm('Do you want to Print this Bill?');
                     if(print == true)
                     {
                        window.location.replace(url);
                     }
                     else{
                         window.location.replace('/bills/index');
                     }
             },
             error: function (a, b, c) {
                alert('An error Occured! please try again..')
                console.log(a, b, c);
                window.location.replace('/bills/create');
            }
        });
    }
        (function($) {
    $.extend({
        toDictionary: function(query) {
            var parms = {};
            var items = query.split(""&""); // split
            for (var i = 0; i < items.length; i++) {
                var values = items[i].spl");
            WriteLiteral(@"it(""="");
                var keys = values.shift().split(""."");
                var key = decodeURIComponent(keys[keys.length -1]);
                var value = values.join(""="")
                parms[key] = parseInt(decodeURIComponent(value));
            }
            return (parms);
        }
    })
})(jQuery);


    </script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<BillViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
