@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@using CoreSRT.Models.ViewModels

@model BillViewModel

<div>
    <p align="center"> <b>Generate Bill</b> </p>
</div>

@using (Html.BeginForm("Create", "Bills", FormMethod.Post))
{


    <table class="table">
        <tr>
            <td> Select Customer : </td>
            <td> @Html.DropDownListFor(m => m.CustomerId, new SelectList(Model.Customers, "CustomerId", "Name"), "Select Customer")
        </tr>
    </table>

    <table name="BillingItems" class="table" id="billingItemsTable">
        <thead>
            <tr>

                <th class="col-md-2">
                    Item
                </th>
                <th class="col-md-2">
                    @Html.DisplayNameFor(model => model.BillingItems.First().CGST)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BillingItems.First().SGST)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BillingItems.First().OriginalPrice)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BillingItems.First().SellingPrice)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BillingItems.First().Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BillingItems.First().TotalPrice)
                </th>
            </tr>
        </thead>
        <tbody class="itemCollections">
            @for (int i = 0; i < Model.BillingItems.Count; i++)
            {

                Html.RenderPartial("BillingItemViewModel", Model.BillingItems[i]);
            }

        </tbody>
        <tfoot>
            <tr>
                <td>
                    @Html.ActionLink("Add New Item", "AddItemNew" , new { model = Model})
                </td>
                <td>
                    <input id="btnAdd" class="btnAdd btn btn-default" type="button" name="name" value="Add" />
                </td>
                <td>
                    <input id="btnSubmit" type="button" value="Generate Bill" class="btn btn-default" onclick="TestFunction()" />
                </td>
                <td></td>
                <td></td>
            </tr>
        </tfoot>
    </table>
}

    <script type="text/javascript">
    $(document).on("click", ".btnAdd", function(){
    var index = $("table#billingItemsTable tbody tr").length + 1;

       $.ajax({
            url: 'AddItem',
    data:{index:index},
            success: function (data) {
                $('#billingItemsTable > tbody').append(data);
            },
            error: function (a, b, c) {
                console.log(a, b, c);
            }

        });
    });
 function TestFunction(){
        var table = $('table#billingItemsTable');

        var o = [];
        table.find('tr').each(function() {
        var $this = $(this);
        var $elements = $this.find('input, textarea, select')
        if ($elements.size() > 0) {
            var serialized = $elements.serialize();
            var item = $.toDictionary( serialized );
            o.push(item);
        }
        });
        o.splice(-1,1);

        var modelJson = new Object();
        modelJson.CustomerId = parseInt($('[id*="CustomerId"]').val());
        modelJson.Items = o;

        var dataJson = JSON.stringify(modelJson);
        var tempp = JSON.stringify({"modelJson": dataJson});

        $.ajax({
             url:'Create',
             type:'POST',
             dataType: "json",
             contentType: 'application/json; charset=utf-8',
             data:  dataJson,
             success: function(data1){
                   window.location.href = '/Bills/print?billNo=' + data1;
             },
             error: function (a, b, c) {
                console.log(a, b, c);
            }
        });
    }
        (function($) {
    $.extend({
        toDictionary: function(query) {
            var parms = {};
            var items = query.split("&"); // split
            for (var i = 0; i < items.length; i++) {
                var values = items[i].split("=");
                var keys = values.shift().split(".");
                var key = decodeURIComponent(keys[keys.length -1]);
                var value = values.join("=")
                parms[key] = parseInt(decodeURIComponent(value));
            }
            return (parms);
        }
    })
})(jQuery);


    </script>